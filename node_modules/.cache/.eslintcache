[{"/home/tech/Downloads/lander_page_contentful/src/index.js":"1","/home/tech/Downloads/lander_page_contentful/src/App.js":"2","/home/tech/Downloads/lander_page_contentful/src/reportWebVitals.js":"3","/home/tech/Downloads/lander_page_contentful/src/Blog/SingleBlog.js":"4","/home/tech/Downloads/lander_page_contentful/src/Blog/BlogList.js":"5","/home/tech/Downloads/lander_page_contentful/src/Component/ShowData.js":"6","/home/tech/Downloads/lander_page_contentful/src/Constants/LanguageConstants.js":"7","/home/tech/Downloads/lander_page_contentful/src/Component/LanguageDropDown/LanguageDropdown.js":"8","/home/tech/work/lander_page_contentful/src/index.js":"9","/home/tech/work/lander_page_contentful/src/App.js":"10","/home/tech/work/lander_page_contentful/src/reportWebVitals.js":"11","/home/tech/work/lander_page_contentful/src/Blog/BlogList.js":"12","/home/tech/work/lander_page_contentful/src/Blog/SingleBlog.js":"13","/home/tech/work/lander_page_contentful/src/Component/ShowData.js":"14","/home/tech/work/lander_page_contentful/src/Component/LanguageDropDown/LanguageDropdown.js":"15","/home/tech/work/lander_page_contentful/src/Constants/LanguageConstants.js":"16","/home/tech/work/lander_page_contentful/src/Component/BlogData.js":"17"},{"size":535,"mtime":1697110455000,"results":"18","hashOfConfig":"19"},{"size":908,"mtime":1700485643103,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1697110455000,"results":"21","hashOfConfig":"19"},{"size":2711,"mtime":1697114417000,"results":"22","hashOfConfig":"19"},{"size":2546,"mtime":1697116878000,"results":"23","hashOfConfig":"19"},{"size":6625,"mtime":1700475686086,"results":"24","hashOfConfig":"19"},{"size":132,"mtime":1700128036718,"results":"25","hashOfConfig":"19"},{"size":2960,"mtime":1700485690955,"results":"26","hashOfConfig":"19"},{"size":535,"mtime":1697110455000,"results":"27","hashOfConfig":"28"},{"size":1044,"mtime":1702293156646,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1697110455000,"results":"30","hashOfConfig":"28"},{"size":2546,"mtime":1697116878000,"results":"31","hashOfConfig":"28"},{"size":2711,"mtime":1697114417000,"results":"32","hashOfConfig":"28"},{"size":6625,"mtime":1700475686086,"results":"33","hashOfConfig":"28"},{"size":2960,"mtime":1700485690955,"results":"34","hashOfConfig":"28"},{"size":132,"mtime":1700128036718,"results":"35","hashOfConfig":"28"},{"size":4681,"mtime":1702295350225,"results":"36","hashOfConfig":"28"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q4p7si",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12wl921",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},"/home/tech/Downloads/lander_page_contentful/src/index.js",[],[],"/home/tech/Downloads/lander_page_contentful/src/App.js",[],[],"/home/tech/Downloads/lander_page_contentful/src/reportWebVitals.js",[],[],"/home/tech/Downloads/lander_page_contentful/src/Blog/SingleBlog.js",["91"],[],"/home/tech/Downloads/lander_page_contentful/src/Blog/BlogList.js",["92"],[],"/home/tech/Downloads/lander_page_contentful/src/Component/ShowData.js",["93"],[],"import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport styles from './ShowData.module.scss';\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport { createClient } from \"contentful\";\nconst ShowData = () => {\n  const [filteredData, setFilteredData] = useState([]);\n  const [cryptoArray, setCryptoArray] = useState([]);\n  const [faqArray, setFaqArray] = useState([]);\n  const { id } = useParams();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const client = createClient({ \n    space: \"4fvznm2u5cg7\", \n    accessToken: \"yy1xv31CKjpp1pbpgxGitvx7a9JhNtb-AhH9Q1sQ-vk\" \n  })\n\n  useEffect(() => {\n    const getAllEntries = async () => {\n      try {\n        setLoading(true);\n        await client.getEntries().then((entries) => {\n          setData(entries);\n        });\n      } catch (error) {\n        console.log(`Error fetching authors ${error}`);\n      }\n      finally{\n        setLoading(false);\n      }\n    };\n    getAllEntries();\n  }, []);\n  \n  useEffect(() => {\n    const filterData = () => {\n      const filteredItems = data?.items?.find((item) => item?.fields?.slug === id);\n      setFilteredData(filteredItems);\n    };\n\n    filterData();\n  }, [data, id]);\n\n\n  useEffect(() => {\n    const updateArrays = () => {\n      const newCryptoArray = [];\n      const newFaqArray = [];\n\n      for (const key in filteredData?.fields) {\n        if (key.startsWith(\"cryptoQuestion\")) {\n          const questionKey = key;\n          const answerKey = key.replace(\"cryptoQuestion\", \"cryptoAnswer\");\n          const question = filteredData?.fields[questionKey];\n          const answer = documentToHtmlString(filteredData?.fields[answerKey]);\n          newCryptoArray.push({ question, answer });\n        } else if (key.startsWith(\"faqQuestion\")) {\n          const questionKey = key;\n          const answerKey = key.replace(\"faqQuestion\", \"faqAnswer\");\n          const question = filteredData?.fields[questionKey];\n          const answer = documentToHtmlString(filteredData?.fields[answerKey]);\n          newFaqArray.push({ question, answer });\n        }\n      }\n\n      setCryptoArray(newCryptoArray);\n      setFaqArray(newFaqArray);\n    };\n\n    updateArrays();\n  }, [filteredData]);\n\n  function convertHtmlToText(html) {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, 'text/html');\n    return doc.body.textContent || \"\";\n  }\n\n  function convertHtmlToTextWithBreaks(html) {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, 'text/html');\n    const elements = Array.from(doc.body.childNodes);\n\n    const renderElements = elements.map((element, index) => {\n      if (element.nodeName === 'P') {\n        return <p key={index} style={{ margin: '10px 0' }}>{element.textContent}</p>;\n      } else if (element.nodeName === 'UL') {\n        const listItems = Array.from(element.querySelectorAll('li'));\n        return (\n          <ul key={index} style={{ listStyleType: 'disc', margin: '0 auto' }}>\n            {listItems.map((listItem, listIndex) => (\n              <li key={listIndex}>{listItem.textContent}</li>\n            ))}\n          </ul>\n        );\n      }\n      return null;\n    });\n\n    return renderElements;\n  }\n\n  return (\n    <div>\n      {loading && \n      <div style={{width: \"100vw\", height:\"100vh\", display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>Loading...</div>\n      }\n      {\n        filteredData?.fields &&\n        <div className={styles.homePageWrapper}>\n          <div className={styles.heroSection}>\n            <div className={styles.heroImageWrapper}>\n              <img src={`${filteredData?.fields?.heroSectionImage1?.fields?.file?.url}`} alt='Frame1.png' />\n              <img src={`${filteredData?.fields?.heroSectionImage2?.fields?.file?.url}`} alt='Frame2.png' />\n              <img src={`${filteredData?.fields?.heroSectionImage3?.fields?.file?.url}`} alt='Frame3.png' />\n            </div>\n            <div className={styles.heroSectionWrapper}>\n              <h3>{filteredData?.fields?.heroSectionTitle}</h3>\n              <p>{filteredData?.fields?.heroSectionTitleDiscription}</p>\n            </div>\n          </div>\n\n          <section className={styles.qnaCryptoWrapper}>\n            <div className={styles.qnaCryptoTitle}>\n              <h3>{filteredData?.fields?.section2Title}</h3>\n            </div>\n            <div className={styles.qnaCryptoBody}>\n              <div className={styles?.cardDesignWrap}>\n                {\n                  cryptoArray?.map((item, index) => (\n                    <div key={index} className={styles.cardStyle}>\n                      <h4>{item?.question}</h4>\n                      <p>{convertHtmlToText(item?.answer)}</p>\n                    </div>\n                  ))\n                }\n              </div>\n              <div className={styles.qnaSectionImageWrap}>\n                <img src='./images/qnaCryptoSectionImg.png' alt='qnaSectionImageWrap' />\n              </div>\n            </div>\n          </section>\n\n          <section className={styles.buyCryptoWrapper}>\n            <div className={styles.buyCryptoTitle}>\n              <h3>Why use Best Wallet to buy Ethereum?</h3>\n            </div>\n            <div className={styles.buyCryptoBody}>\n              <div className={styles.buySectionImageWrap}>\n                <img src='./images/buyCryptoSectionImg.png' alt='qnaSectionImageWrap' />\n              </div>\n              <div className={styles?.cardDesignWrap}>\n                {\n                  faqArray?.map((item, index) => (\n                    <div key={index} className={styles.cardStyle}>\n                      <h4>{item?.question}</h4>\n                      <p>{convertHtmlToText(item?.answer)}</p>\n                    </div>\n                  ))\n                }\n              </div>\n            </div>\n          </section>\n\n          <section className={styles.faqWrapper}>\n            <div className={styles.faqTitle}>\n              <h3>Frequently Asked Questions</h3>\n            </div>\n            <div className={styles.faqBody}>\n              <div className={styles?.cardDesignWrap}>\n                {\n                  faqArray?.map((item, index) => (\n                    <div key={index} className={styles.cardStyle}>\n                      <h4>{item?.question}</h4>\n                      <p>{convertHtmlToTextWithBreaks(item?.answer)}</p>\n                    </div>\n                  ))\n                }\n              </div>\n            </div>\n          </section>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default ShowData;\n",[],"/home/tech/Downloads/lander_page_contentful/src/Constants/LanguageConstants.js",[],[],"/home/tech/Downloads/lander_page_contentful/src/Component/LanguageDropDown/LanguageDropdown.js",["94","95"],[],"/home/tech/work/lander_page_contentful/src/index.js",[],[],"/home/tech/work/lander_page_contentful/src/App.js",[],[],"/home/tech/work/lander_page_contentful/src/reportWebVitals.js",[],[],"/home/tech/work/lander_page_contentful/src/Blog/BlogList.js",["96"],[],"/home/tech/work/lander_page_contentful/src/Blog/SingleBlog.js",["97"],[],"/home/tech/work/lander_page_contentful/src/Component/ShowData.js",["98"],[],"/home/tech/work/lander_page_contentful/src/Component/LanguageDropDown/LanguageDropdown.js",["99","100"],[],"/home/tech/work/lander_page_contentful/src/Constants/LanguageConstants.js",[],[],"/home/tech/work/lander_page_contentful/src/Component/BlogData.js",["101","102","103","104","105","106"],[],"import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport styles from './BlogData.module.scss';\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport { createClient } from \"contentful\";\nconst BlogData = () => {\n  const [filteredData, setFilteredData] = useState([]);\n  const [cryptoArray, setCryptoArray] = useState([]);\n  const [faqArray, setFaqArray] = useState([]);\n  const { id, href } = useParams();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const client = createClient({ \n    space: \"4fvznm2u5cg7\", \n    accessToken: \"yy1xv31CKjpp1pbpgxGitvx7a9JhNtb-AhH9Q1sQ-vk\" \n  })\n\n  useEffect(() => {\n    const getAllEntries = async () => {\n      try {\n        setLoading(true);\n        await client.getEntries().then((entries) => {\n          setData(entries);\n        });\n      } catch (error) {\n        console.log(`Error fetching authors ${error}`);\n      }\n      finally{\n        setLoading(false);\n      }\n    };\n    getAllEntries();\n  }, []);\n  \n  useEffect(() => {\n    const filterData = () => {\n      const filteredItems = data?.items?.find((item) => item?.fields?.slug.split(\"/\")[1] === id);\n      setFilteredData(filteredItems);\n    };\n    filterData();\n  }, [data, id]);\n\n\n  useEffect(() => {\n    const updateArrays = () => {\n      const newCryptoArray = [];\n      const newFaqArray = [];\n\n      for (const key in filteredData?.fields) {\n        if (key.startsWith(\"cryptoQuestion\")) {\n          const questionKey = key;\n          const answerKey = key.replace(\"cryptoQuestion\", \"cryptoAnswer\");\n          const question = filteredData?.fields[questionKey];\n          const answer = documentToHtmlString(filteredData?.fields[answerKey]);\n          newCryptoArray.push({ question, answer });\n        } else if (key.startsWith(\"faqQuestion\")) {\n          const questionKey = key;\n          const answerKey = key.replace(\"faqQuestion\", \"faqAnswer\");\n          const question = filteredData?.fields[questionKey];\n          const answer = documentToHtmlString(filteredData?.fields[answerKey]);\n          newFaqArray.push({ question, answer });\n        }\n      }\n\n      setCryptoArray(newCryptoArray);\n      setFaqArray(newFaqArray);\n    };\n\n    updateArrays();\n    console.log(filteredData, \"filteredData\");\n  }, [filteredData]);\n\n  function convertHtmlToText(html) {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, 'text/html');\n    return doc.body.textContent || \"\";\n  }\n\n  function convertHtmlToTextWithBreaks(html) {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, 'text/html');\n    const elements = Array.from(doc.body.childNodes);\n\n    const renderElements = elements.map((element, index) => {\n      if (element.nodeName === 'P') {\n        return <p key={index} style={{ margin: '10px 0' }}>{element.textContent}</p>;\n      } else if (element.nodeName === 'UL') {\n        const listItems = Array.from(element.querySelectorAll('li'));\n        return (\n          <ul key={index} style={{ listStyleType: 'disc', margin: '0 auto' }}>\n            {listItems.map((listItem, listIndex) => (\n              <li key={listIndex}>{listItem.textContent}</li>\n            ))}\n          </ul>\n        );\n      }\n      return null;\n    });\n\n    return renderElements;\n  }\n\n  return (\n    <div>\n      {loading && \n      <div style={{width: \"100vw\", height:\"100vh\", display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>Loading...</div>\n      }\n      {\n        filteredData?.fields &&\n        <div className={styles.homePageWrapper}>\n          <div className={styles.heroSection}>\n           \n            <div className={styles.heroSectionWrapper}>\n              <h3 style={{marginBottom:\"20px\"}}>{filteredData?.fields?.heroTitle}</h3>\n              <p>{filteredData?.fields?.description}</p>\n            </div>\n\n             <div className={styles.heroImageWrapper}>\n              <img src={`${filteredData?.fields?.blogImage1?.fields?.file?.url}`} alt='Frame1.png' />\n              <img src={`${filteredData?.fields?.blogImage2?.fields?.file?.url}`} alt='Frame2.png' />\n            </div>\n\n            <div className={styles.nextWrapper}>\n              <div className={styles.descriptionText}>{filteredData?.fields?.descriptionText}</div>\n              <div style={{marginTop:\"10px\", textAlign:\"right\", color:\"blue\", fontWeight:\"bold\"}}>- {id.split(\"-\")[0]}</div>\n              <div style={{height: \"100px\"}}>\n              </div>\n            </div>\n          </div>\n          <div style={{height: \"100px\"}}>\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default BlogData;\n",{"ruleId":"107","severity":1,"message":"108","line":24,"column":6,"nodeType":"109","endLine":24,"endColumn":10,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"108","line":20,"column":6,"nodeType":"109","endLine":20,"endColumn":8,"suggestions":"111"},{"ruleId":"107","severity":1,"message":"108","line":33,"column":6,"nodeType":"109","endLine":33,"endColumn":8,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":38,"column":11,"nodeType":"115","endLine":38,"endColumn":170},{"ruleId":"113","severity":1,"message":"114","line":61,"column":15,"nodeType":"115","endLine":71,"endColumn":17},{"ruleId":"107","severity":1,"message":"108","line":20,"column":6,"nodeType":"109","endLine":20,"endColumn":8,"suggestions":"116"},{"ruleId":"107","severity":1,"message":"108","line":24,"column":6,"nodeType":"109","endLine":24,"endColumn":10,"suggestions":"117"},{"ruleId":"107","severity":1,"message":"108","line":33,"column":6,"nodeType":"109","endLine":33,"endColumn":8,"suggestions":"118"},{"ruleId":"113","severity":1,"message":"114","line":38,"column":11,"nodeType":"115","endLine":38,"endColumn":170},{"ruleId":"113","severity":1,"message":"114","line":61,"column":15,"nodeType":"115","endLine":71,"endColumn":17},{"ruleId":"119","severity":1,"message":"120","line":8,"column":10,"nodeType":"121","messageId":"122","endLine":8,"endColumn":21},{"ruleId":"119","severity":1,"message":"123","line":9,"column":10,"nodeType":"121","messageId":"122","endLine":9,"endColumn":18},{"ruleId":"119","severity":1,"message":"124","line":10,"column":15,"nodeType":"121","messageId":"122","endLine":10,"endColumn":19},{"ruleId":"107","severity":1,"message":"108","line":33,"column":6,"nodeType":"109","endLine":33,"endColumn":8,"suggestions":"125"},{"ruleId":"119","severity":1,"message":"126","line":73,"column":12,"nodeType":"121","messageId":"122","endLine":73,"endColumn":29},{"ruleId":"119","severity":1,"message":"127","line":79,"column":12,"nodeType":"121","messageId":"122","endLine":79,"endColumn":39},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'client'. Either include it or remove the dependency array.","ArrayExpression",["128"],["129"],["130"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["131"],["132"],["133"],"no-unused-vars","'cryptoArray' is assigned a value but never used.","Identifier","unusedVar","'faqArray' is assigned a value but never used.","'href' is assigned a value but never used.",["134"],"'convertHtmlToText' is defined but never used.","'convertHtmlToTextWithBreaks' is defined but never used.",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"137","fix":"139"},{"desc":"137","fix":"140"},{"desc":"135","fix":"141"},{"desc":"137","fix":"142"},{"desc":"137","fix":"143"},"Update the dependencies array to be: [client, id]",{"range":"144","text":"145"},"Update the dependencies array to be: [client]",{"range":"146","text":"147"},{"range":"148","text":"147"},{"range":"149","text":"147"},{"range":"150","text":"145"},{"range":"151","text":"147"},{"range":"152","text":"147"},[738,742],"[client, id]",[634,636],"[client]",[1056,1058],[634,636],[738,742],[1056,1058],[1062,1064]]